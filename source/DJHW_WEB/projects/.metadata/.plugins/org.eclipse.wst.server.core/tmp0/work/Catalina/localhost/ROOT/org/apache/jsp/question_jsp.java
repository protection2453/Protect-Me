/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2019-08-22 06:51:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;

public final class question_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/custom.css\">\n");
      out.write("<title>나를지켜줘</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t");

	//==========자주묻는질문==========
		//세션이 유지되는지 검사
		String userID = null;
		if(session.getAttribute("userID") != null) {
			userID = (String) session.getAttribute("userID");
		}
	
      out.write("\n");
      out.write("\t<nav class=\"navbar navbar-default\">\n");
      out.write("\t\t<div class=\"navbar-header\">\n");
      out.write("\t\t\t<button type=\"button\" class=\"navbar-toggle collapsed\"\n");
      out.write("\t\t\t\tdata-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"\n");
      out.write("\t\t\t\taria-expanded=\"false\">\n");
      out.write("\t\t\t\t<span class=\"icon-bar\"></span>\n");
      out.write("\t\t\t\t<span class=\"icon-bar\"></span>\n");
      out.write("\t\t\t\t<span class=\"icon-bar\"></span>\n");
      out.write("\t\t\t</button>\n");
      out.write("\t\t\t<a class=\"navbar-brand\" href=\"main.jsp\">나를지켜줘</a>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav\">\n");
      out.write("\t\t\t\t<li><a href=\"main.jsp\">성범죄 상담소</a></li>\n");
      out.write("\t\t\t\t<li><a href=\"population.jsp\">성범죄 인구수</a></li>\n");
      out.write("\t\t\t\t<li><a href=\"bbs.jsp\">온라인 상담</a></li>\n");
      out.write("\t\t\t\t<li class=\"active\"><a href=\"question.jsp\">자주묻는질문</a></li>\n");
      out.write("\t\t\t\t<li><a href=\"check.jsp\">자기점검코너</a></li>\n");
      out.write("\t\t\t\t<li><a href=\"law.jsp\">법률개정안내</a></li>\t\t\t\n");
      out.write("\t\t\t\t");

				if("admin".equals(userID)) {
				
      out.write("\n");
      out.write("\t\t\t\t<li><a href=\"admin.jsp\">관리자페이지</a></li>\t\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t\t");

				//세션이 없다면 -> 로그인, 회원가입 가능
				if(userID == null) {
			
      out.write("\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("\t\t\t\t<li class=\"dropdown\">\n");
      out.write("\t\t\t\t\t<a href=\"#\" class=\"dropdown-toggle\"\n");
      out.write("\t\t\t\t\t\tdata-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n");
      out.write("\t\t\t\t\t\taria-expanded=\"false\">접속하기<span class=\"caret\"></span></a>\n");
      out.write("\t\t\t\t\t<ul class=\"dropdown-menu\">\n");
      out.write("\t\t\t\t\t\t<li><a href=\"login.jsp\">로그인</a></li>\n");
      out.write("\t\t\t\t\t\t<li><a href=\"join.jsp\">회원가입</a></li>\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t\t");
		
				//세션이 있다면 -> 로그아웃, 회원탈퇴 가능
				} else {
			
      out.write("\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("\t\t\t\t<li class=\"dropdown\">\n");
      out.write("\t\t\t\t\t<a href=\"#\" class=\"dropdown-toggle\"\n");
      out.write("\t\t\t\t\t\tdata-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n");
      out.write("\t\t\t\t\t\taria-expanded=\"false\">회원관리<span class=\"caret\"></span></a>\n");
      out.write("\t\t\t\t\t<ul class=\"dropdown-menu\">\n");
      out.write("\t\t\t\t\t\t<li><a href=\"logoutAction.jsp\">로그아웃</a></li>\n");
      out.write("\t\t\t\t\t\t<li><a onclick=\"return confirm('정말로 탈퇴하시겠습니까?')\" href=\"removeAction.jsp\">회원탈퇴</a></li>\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\t</ul>\t\t\t\n");
      out.write("\t\t\t");

				}
			
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t</nav>\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<div class=\"jumbotron\">\n");
      out.write("\t\t\t<div class=\"container\">\n");
      out.write("\t\t\t\t<h1>자주묻는질문</h1>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : 음담패설이나 농담으로 나를 제외한 모두가 웃고 즐겼다면 성희롱이 아닌가요?</p>\n");
      out.write("\t\t\t\t<p id=\"questionstring\">A : 나 혼자만 불쾌감을 느낀 경우에도 성희롱이 성립될 수 있습니다.</p>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : 짧은 치마에 대해 지적하는 것은 성희롱인가요?</p>\n");
      out.write("\t\t\t\t<p id=\"questionstring\">A : 성희롱이 성립되지 않는 경우 - 관리자의 직무와 관련된 지시와 요구는 문제가 되지 않습니다.\n");
      out.write("\t\t\t\t\t<br />성희롱이 성립되는 경우 - 외모나 복장의 지적 방식이 성적 불쾌감을 유발하는 경우 성희롱에 해당됩니다.</p>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : 칭찬하는 의미에서 여성에게 “섹시하다”라고 말했다면 성희롱인가요?</p>\n");
      out.write("\t\t\t\t<p  id=\"questionstring\">A : 어떤 의도였는지의 여부보다 그 말이 때와 장소, 관계에 따라 다르게 받아들여진다는 점을 주의해야 합니다.</p>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : 야한 농담을 해도 아무 소리 없이 듣고만 있다가 이후에 문제 제기해도 성희롱인가요?</p>\n");
      out.write("\t\t\t\t<p id=\"questionstring\">A :  야한 농담이 행해졌던 당시 정황상 상대의 의사를 존중하는 바탕에서 이루어진 것인지의 여부가 중요합니다. \n");
      out.write("\t\t\t\t\t<br />특히 행위자의 지위가 높고 피해자의 지위가 낮을수록 거부감을 표현하기 어렵다는 것을 주의해야 합니다.</p>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : 남성들끼리만 야한 농담을 하고 있었는데, 이를 여성이 들었다면 성희롱인가요?</p>\n");
      out.write("\t\t\t\t<p id=\"questionstring\">A : 일회성이 아니라 일상적으로 성적 언행들이 반복된다면 문제가 될 수 있습니다.\n");
      out.write("\t\t\t\t\t<br /> 이는 다른 여성들에게 지속적으로 불쾌감을 줄 수 있고 생활에 현저히 악영향을 미칠 수 있기 때문입니다.</p>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : 과도한 노출이 있을 때 어쩔 수 없이 쳐다본 경우도 성희롱에 해당하나요?</p>\n");
      out.write("\t\t\t\t<p id=\"questionstring\">A : 쳐다본다는 자체만으로는 성희롱 문제는 아닙니다. \n");
      out.write("\t\t\t\t\t<br /> 다만, 특정 신체부위를 빤히 쳐다본다든지, 전신을 아래위로 훑어본다든지, \n");
      out.write("\t\t\t\t\t<br /> 당사자가 불쾌감을 표현했는데도 반복적으로 쳐다본다든지, ‘음흉한 눈빛’을 반복적이거나 \n");
      out.write("\t\t\t\t\t<br /> 상대방의 외모에 대한 성적 평가를 하는 언행을 함께 사용하는 행위 등은 성희롱이 될 수 있습니다.</p>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : 여자가 격려차 ‘동생 같다’며, 남자의 엉덩이를 친 것도 성희롱인가요?</p>\n");
      out.write("\t\t\t\t<p id=\"questionstring\">A : 일방적으로 행하는 성적 언동은 그 대상이 남녀를 불문합니다.\n");
      out.write("\t\t\t\t\t<br /> 때로 남성에게 가벼운 장난이 아니라 모욕이 될 수도 있습니다.</p>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : 설명을 위해 여성의 팔이나 어깨를 만진 행위도 성희롱이 될 수 있나요?</p>\n");
      out.write("\t\t\t\t<p id=\"questionstring\">A : 신체의 어느 부위에 접촉이든 상대방의 의사가 중요합니다 . \n");
      out.write("\t\t\t\t\t<br /> 즉 ‘상대방이 원하지 않는’ 행위였다면 성희롱이 될 수 있습니다.</p>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : ‘아들 같다, 딸 같다’며, 어깨안마를 해달라고 하거나 흰머리를 뽑게 하는 것도 성희롱인가요?</p>\n");
      out.write("\t\t\t\t<p id=\"questionstring\">A : 문제의 행위들이 ‘친밀감의 표현’ 이었는지 여부는 행위자가 아니라 피해자의 시각에서 이루어집니다.    \n");
      out.write("\t\t\t\t\t<br /> 따라서 상대가 ‘원하지 않는 행위’ 였고 불쾌감이 느꼈다면 성희롱이 성립됩니다.</p>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : 성희롱을 하려고 한 의도 없이 이뤄진 행위도 성희롱이 될 수 있나요?</p>\n");
      out.write("\t\t\t\t<p id=\"questionstring\">A : 성희롱 여부의 판단은 피해자가 어떻게 느끼고 어떤 영향을 받았는가를 존중하여 이루어집니다.</p>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : 피해자가 거부의사를 명확히 표현하지 않은 경우에도 성희롱이 성립될 수 있나요?</p>\n");
      out.write("\t\t\t\t<p id=\"questionstring\">A : 거부의사 표현이나 성희롱에 대한 문제제기를 했을 경우\n");
      out.write("\t\t\t\t\t<br /> 불이익을 감수해야 하는 두려움 등으로 적극적으로 의사 표현하지 못하는 경우가 대다수입니다.\n");
      out.write("\t\t\t\t\t<br /> 따라서 피해자의 거부의사 표현 여부는 전혀 판단의 기준이 되지 못합니다.</p>\n");
      out.write("\t\t\t\t<br />\n");
      out.write("\t\t\t\t<p>Q : 단 한 번의 행위로도 성희롱이 성립될 수 있나요?</p>\n");
      out.write("\t\t\t\t<p id=\"questionstring\">A : 단 한 번의 성적 언동이라도 피해자가 성적 굴욕감을 느꼈거나\n");
      out.write("\t\t\t\t\t<br /> 성적 요구를 거부하였다는 이유로 불이익을 받았다면 성희롱이 성립됩니다.</p>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\n");
      out.write("\t<script src=\"js/bootstrap.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
